import React, { useState, useRef, useEffect } from 'react';
import { FileText, Zap, Target, Award, Linkedin } from 'lucide-react';

const PortfolioWebsite = () => {
  const [activeSection, setActiveSection] = useState(0);
  const sectionsRef = useRef([]);

  const projects = [
    {
      icon: <Zap className="text-emerald-500" size={32} />, 
      title: "E-commerce Platform Redesign",
      subtitle: "Transformation Strategy",
      description: "Led a cross-functional team to improve user experience and increase conversion rates by 25%.",
      skills: ["User Research", "UX Design", "Product Strategy"],
      impact: "$500K revenue increase",
      color: "bg-gradient-to-br from-emerald-100 to-emerald-200 shadow-lg"
    },
    {
      icon: <Target className="text-purple-500" size={32} />, 
      title: "Mobile App Feature Roadmap",
      subtitle: "Product Innovation",
      description: "Developed and prioritized feature backlog based on user feedback and market analysis.",
      skills: ["Agile Methodology", "Product Roadmapping", "User Insights"],
      impact: "40% user engagement boost",
      color: "bg-gradient-to-br from-purple-100 to-purple-200 shadow-lg"
    },
    {
      icon: <Award className="text-orange-500" size={32} />, 
      title: "Customer Feedback System",
      subtitle: "Experience Optimization",
      description: "Implemented a comprehensive feedback collection and analysis system.",
      skills: ["Data Analysis", "Customer Experience", "Product Metrics"],
      impact: "Reduced churn by 15%",
      color: "bg-gradient-to-br from-orange-100 to-orange-200 shadow-lg"
    }
  ];

  const handleScroll = () => {
    const scrollPosition = window.scrollY;
    sectionsRef.current.forEach((section, index) => {
      if (section) {
        const sectionTop = section.offsetTop;
        const sectionHeight = section.clientHeight;
        if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
          setActiveSection(index);
        }
      }
    });
  };

  useEffect(() => {
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  return (
    <div className="bg-gradient-to-br from-indigo-200 via-purple-200 to-pink-200 min-h-screen">
      {/* Landing Page */}
      <section ref={(el) => sectionsRef.current[0] = el} className="min-h-screen flex items-center justify-center p-12">
        <div className="bg-white/80 backdrop-blur-lg p-16 rounded-3xl shadow-xl w-full max-w-4xl">
          <h1 className="text-5xl font-black text-center text-gray-900 mb-5 tracking-tight">Jane Doe</h1>
          <h2 className="text-2xl font-semibold text-center text-purple-700 mb-6">Product Manager & Designer</h2>
          <p className="text-lg text-center text-gray-700 leading-relaxed mb-8">
            Transforming complex challenges into elegant, user-centric solutions that drive business growth through strategic design and innovative thinking.
          </p>
          <div className="flex justify-center space-x-6">
            <a href="/resume.pdf" target="_blank" className="bg-emerald-500 text-white px-7 py-4 rounded-full hover:bg-emerald-600 transition-all duration-300 shadow-md">Download Resume</a>
            <a href="https://www.linkedin.com/in/yourusername" target="_blank" rel="noopener noreferrer" className="bg-blue-600 text-white p-4 rounded-full hover:bg-blue-700 transition-all duration-300 shadow-md">
              <Linkedin size={24} />
            </a>
          </div>
        </div>
      </section>

      {/* Projects Section */}
      <section ref={(el) => sectionsRef.current[1] = el} className="min-h-screen p-16">
        <div className="max-w-6xl mx-auto text-center">
          <h2 className="text-4xl font-bold text-gray-900 mb-12">Projects So Far</h2>
          <div className="grid md:grid-cols-3 gap-8">
            {projects.map((project, index) => (
              <div key={index} className={`p-8 rounded-3xl transition-all duration-500 ${project.color} hover:scale-105`}> 
                <div className="flex items-center mb-6">{project.icon}
                  <div className="ml-4">
                    <span className="text-sm uppercase tracking-wide text-gray-500 block">{project.subtitle}</span>
                    <h3 className="text-2xl font-bold text-gray-900">{project.title}</h3>
                  </div>
                </div>
                <p className="text-gray-700 mb-6">{project.description}</p>
                <div className="flex flex-wrap gap-2 mb-6 justify-center">
                  {project.skills.map((skill, skillIndex) => (<span key={skillIndex} className="bg-white/50 text-gray-700 text-sm px-3 py-1 rounded-full shadow">{skill}</span>))}
                </div>
                <div className="text-lg font-semibold text-emerald-600">Impact: {project.impact}</div>
              </div>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
};

export default PortfolioWebsite;
